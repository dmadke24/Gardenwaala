@model ProductViewModel
@{
    ViewBag.Heading = "Products";
    string action;
    ViewBag.CurrentMenu = "pdt";

    if (Model == null)
    {
        ViewBag.Title = "Create";
        action = "Create";
        ViewBag.Breadcrumbs = "New Products";
    }
    else
    {
        ViewBag.Title = "Edit";
        action = "Edit";
        ViewBag.Breadcrumbs = "Edit Products";
    }
}
<div class="page-header">
    <h1>
        @action
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            Products
        </small>
    </h1>
</div><!-- /.page-header -->
<link href="~/Areas/Admin/AdminDesign/css/bootstrap-wysihtml5.css" rel="stylesheet" />
@Html.ValidationSummary(true, "Error", new { @class = "alert alert-danger" })
<div class="row">
    <div class="col-xs-12">
        <!-- PAGE CONTENT BEGINS -->
        @using (Html.BeginForm(action, "Product", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            if (action == "Edit")
            {
                @Html.HiddenFor(m => m.ProductId)
                @Html.HiddenFor(m => m.OldImage1)
                @Html.HiddenFor(m => m.OldImage2)
                @Html.HiddenFor(m => m.OldImage3)

            }
            else
            {
                @Html.Hidden("ProductId", 0)
            }
            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.Name, new { @class = "col-xs-10 col-sm-5 width-100" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CategoryId, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.DropDownListFor(m => m.CategoryId, new SelectList(ViewBag.TypeList, "ID", "Text"), "Select Category", new { @class = "form-control" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.SubCategoryId, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.DropDownListFor(m => m.SubCategoryId, new SelectList(ViewBag.SubTypeList, "ID", "Text"), "Select Sub Category", new { @class = "form-control" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.SubCategoryId, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.NoOfPieces, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.NoOfPieces, new { @class = "col-xs-10 col-sm-5 width-100" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.NoOfPieces, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.NetWeight, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.NetWeight, new { @class = "col-xs-10 col-sm-5 width-100" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.NetWeight, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.GrossWeight, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.GrossWeight, new { @class = "col-xs-10 col-sm-5 width-100" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.GrossWeight, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Size, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.Size, new { @class = "col-xs-10 col-sm-5 width-100" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.Size, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Height, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.Height, new { @class = "col-xs-10 col-sm-5 width-100" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.Height, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ImgFile1, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    <div class="form-group">
                        <div class="col-xs-12">
                            <input type="file" class="MyImage" id="ImgFile1" name="ImgFile1" data-val="true" data-val-extension="Invalid File Type" data-val-extension-extension="png,jpg,jpeg,gif" />
                        </div>
                    </div>
                    @if (action == "Edit" && !string.IsNullOrEmpty(Model.Image1))
                    {
                        <img src="/Areas/Admin/UploadImg/ProductImg/@Model.Image1" width="100">
                    }
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.ImgFile1, "", new { @class = "col-xs-12 col-sm-6" })
                    <span id="imgFileErr1" style="display:block!important;color:red"></span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ImgFile2, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    <div class="form-group">
                        <div class="col-xs-12">
                            <input type="file" id="ImgFile2" class="MyImage" name="ImgFile2" data-val="true" data-val-extension="Invalid File Type" data-val-extension-extension="png,jpg,jpeg,gif" />
                        </div>
                    </div>
                    @if (action == "Edit" && !string.IsNullOrEmpty(Model.Image2))
                    {
                        <img src="/Areas/Admin/UploadImg/ProductImg/@Model.Image2" width="100">
                    }
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.ImgFile2, "", new { @class = "col-xs-12 col-sm-6" })
                    <span id="imgFileErr2" style="display:block!important;color:red"></span>

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ImgFile3, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    <div class="form-group">
                        <div class="col-xs-12">
                            <input type="file" id="ImgFile3" class="MyImage" name="ImgFile3" data-val="true" data-val-extension="Invalid File Type" data-val-extension-extension="png,jpg,jpeg,gif" />
                        </div>
                    </div>
                    @if (action == "Edit" && !string.IsNullOrEmpty(Model.Image3))
                    {
                        <img src="/Areas/Admin/UploadImg/ProductImg/@Model.Image3" width="100">
                    }
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.ImgFile3, "", new { @class = "col-xs-12 col-sm-6" })
                    <span id="imgFileErr2" style="display:block!important;color:red"></span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.TextAreaFor(m => m.Description, new { @class = "col-xs-12 col-sm-12", @rows = "10" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Price, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.Price, new { @class = "col-xs-10 col-sm-5 width-100" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.Price, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.OfferPrice, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.OfferPrice, new { @class = "col-xs-10 col-sm-5 width-100" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.OfferPrice, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Priority, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.Priority, new { @class = "col-xs-10 col-sm-5 width-100" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.Priority, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Stock, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.Stock, new { @class = "col-xs-10 col-sm-5 width-100" })
                </div>
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.Stock, "", new { @class = "col-xs-12 col-sm-6" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.HomeSlide, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    <div class="radio">
                        <label>
                            @Html.RadioButtonFor(m => m.HomeSlide, "true", new { @class = "ace", @checked = "checked" })
                            <span class="lbl"> Yes</span>
                        </label>
                        <label>
                            @Html.RadioButtonFor(m => m.HomeSlide, "false", new { @class = "ace"})
                            <span class="lbl"> No</span>
                        </label>
                    </div>
                    <div class="radio">
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.BestSeller, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    <div class="radio">
                        <label>
                            @Html.RadioButtonFor(m => m.BestSeller, "true", new { @class = "ace", @checked = "checked"})
                            <span class="lbl"> Yes</span>
                        </label>
                        <label>
                            @Html.RadioButtonFor(m => m.BestSeller, "false", new { @class = "ace" })
                            <span class="lbl"> No</span>
                        </label>
                    </div>
                    <div class="radio">
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Status, new { @class = "col-sm-3 control-label no-padding-right" })
                <div class="col-sm-5">
                    <div class="radio">
                        <label>
                            @Html.RadioButtonFor(m => m.Status, "true", new { @class = "ace", @checked = "checked" })
                            <span class="lbl"> Active</span>
                        </label>
                        <label>
                            @Html.RadioButtonFor(m => m.Status, "false", new { @class = "ace" })
                            <span class="lbl"> Inactive</span>
                        </label>
                    </div>
                    <div class="radio">
                    </div>
                </div>
            </div>
            <div class="space-4"></div>
            <div class="clearfix form-actions">
                <div class="col-md-offset-3 col-md-9">
                    <button class="btn btn-info" type="submit">
                        <i class="ace-icon fa fa-check bigger-110"></i>
                        Submit
                    </button>
                    &nbsp; &nbsp; &nbsp;
                    <button class="btn" type="reset">
                        <i class="ace-icon fa fa-undo bigger-110"></i>
                        Reset
                    </button>
                </div>
            </div>
        }
    </div>
</div>
@section Validation{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Areas/Admin/AdminDesign/js/chosen.jquery.min.js"></script>
    <script src="~/Areas/Admin/AdminDesign/js/wysihtml5-0.3.0.js"></script>
    <script src="~/Areas/Admin/AdminDesign/js/bootstrap-wysihtml5.js"></script>
    <script>
        $('form').on('submit', function (evt) {
            var form = $('form');
            form.validate();
            var isValid = form.valid();
            if (isValid == true) {
                var files = $('#ImgFile1').prop('files');
                var size = files[0].size;
                if (size > 1048576) {
                    $('#imgFileErr1').html('You can upload file upto 1MB');
                    return false;
                }

                files = $('#ImgFile2').prop('files');
                size = files[0].size;
                if (size > 1048576) {
                    $('#imgFileErr2').html('You can upload file upto 1MB');
                    return false;
                }
            }
            else
                evt.preventDefault();
        });
        $('#ImgFile1').on('change', function () {
            var files = $(this).prop('files');
            size = files[0].size;
            if (size > 1048576) {
                $('#imgFileErr1').html('You can upload file upto 1MB');
            }
            else
                $('#imgFileErr1').html('');
        });
        $('#ImgFile2').on('change', function () {
            var files = $(this).prop('files');
            size = files[0].size;
            if (size > 1048576) {
                $('#imgFileErr2').html('You can upload file upto 1MB');
            }
            else
                $('#imgFileErr2').html('');
        });
        $(document).ready(function () {
            $('.MyImage').ace_file_input({
                style: 'well',
                btn_choose: 'Drop Image here or click to choose, Upload Image upto 1MB',
                btn_change: null,
                no_icon: 'ace-icon fa fa-cloud-upload',
                droppable: true,
                thumbnail: 'large',
                preview_error: function (filename, error_code) {
                }

            }).on('change', function () {
            });

            $('#Description').wysihtml5();
        });
    </script>
}

